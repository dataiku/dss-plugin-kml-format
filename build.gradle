/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

plugins {
	id 'java'	
}

group 'com.dataiku.dss.formats.kml'

sourceCompatibility = 1.7

def dkuInstallDir = System.getenv("DKUINSTALLDIR")

repositories {
    flatDir {
       	dirs "${dkuInstallDir}/lib/ivy/backend-run",
             "${dkuInstallDir}/lib/ivy/common-run",
             "${dkuInstallDir}/dist",
             'java-lib'
    }
    maven {
        url "https://dl.bintray.com/senx/maven"
    }
    maven {
        url "https://dl.bintray.com/hbs/maven"
    }
    mavenCentral()
}

configurations {
    runtimeOnlyDeps
    runtimeOnlyDeps.transitive = false

    remoteCompileDeps
    remoteCompileDeps.transitive = false
}

dependencies {
    // From DSS lib/dist
    implementation name:'dataiku-core'
    implementation name:'dataiku-dip'
    implementation name:'dataiku-dss-core'
    implementation 'com.google.code.gson:gson:+'
    implementation 'log4j:log4j:+'
    implementation configurations.remoteCompileDeps
    compile group: 'org.apache.commons', name: 'commons-lang', version: '2.6'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}

task copyDependencies(type: Copy) {
    from configurations.runtimeOnlyDeps
    from configurations.remoteCompileDeps
    into 'java-lib'
}

sourceSets {
    main {
        java {
            srcDirs = ['java-formats/kml-format_kml/src']
        }
    }

    test {
        java {
            srcDirs = ['tests/java/unit']
        }
    }
}

test {
    useJUnitPlatform()
}

task prepareForDistribution(type: Copy, dependsOn: ['clean', 'copyDependencies']) {
    from jar
    into 'java-formats/kml-format_kml'
}
